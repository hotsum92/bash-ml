#!/usr/bin/env python

import argparse
import os
import joblib
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import preprocessing as pp
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import log_loss
from sklearn.metrics import precision_recall_curve, average_precision_score
from sklearn.metrics import roc_curve, auc, roc_auc_score

parser = argparse.ArgumentParser()

parser = argparse.ArgumentParser()

parser.add_argument('file_path')
parser.add_argument('-Y')
parser.add_argument('--sav')

args = parser.parse_args()
y_column = args.Y
save = args.sav

file_path = args.file_path

data = pd.read_csv(file_path)

if y_column is None:
    y_column = data.columns[-1]

dataX = data.copy().drop([y_column],axis=1)
dataY = data[y_column].copy()

columns = dataX.columns
sX = pp.StandardScaler(copy=True)
dataX.loc[:,columns] = sX.fit_transform(data.loc[:,columns])

X, y = dataX, dataY

model = joblib.load(save)

print('\n'.join(map(lambda x: format(x, 'f'), model.predict_proba(X)[:,1])))
